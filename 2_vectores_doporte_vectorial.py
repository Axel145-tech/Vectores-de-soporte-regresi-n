# -*- coding: utf-8 -*-
"""2_Vectores_doporte_vectorial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KHL5twV6_taueTXoV_j-5KkJ2JctFrFl
"""

#Importamos las librerias Numpy y pandas
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
#Importamos "VEctores de soporte regresión"
from sklearn.model_selection import train_test_split
from sklearn.svm import SVR

#Librería boston de scikit learn
boston = datasets.load_boston()
print(boston)
print()

#Información del dataset
print(boston.keys())
print()

#Caracteristicas del dataset
print(boston.DESCR)

#Cantidad de datos
print(boston.data.shape)
print()

#Nombre de las Columnas
print(boston.feature_names)

#Separación de los datos "vectores de soporte regresión
X_svr = boston.data[:, np.newaxis, 5]
y_svr = boston.target

#Graficar la representación de lso datos
plt.scatter(X_svr, y_svr)
plt.show()

#Separa los datos de entrenamiento de los datos de pruebaX_train, X_test, y_train, y_test = train_test_split(X_svr, y_svr, test_size=0.2)

# Definir y entrenar el modelo
svr = SVR(kernel='linear', C=1.0, epsilon=0.2)
svr.fit(X_train, y_train)

#Predicción
Y_pred = svr.predict(X_test)

#Gráfica del modelo
plt.scatter(X_test, y_test)
plt.plot(X_test, Y_pred, color='red', linewidth=3)
plt.show()

print('DATOS DEL MODELO VECTORES DE SOPORTE REGRESIÓN')
print('Precisión del modelo:')
print(svr.score(X_train, y_train))